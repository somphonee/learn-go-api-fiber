basePath: /
definitions:
  main.Book:
    properties:
      author:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a book API.
  title: Book API
  version: "1.0"
paths:
  /books:
    delete:
      consumes:
      - application/json
      description: delete book bu id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
      security:
      - ApiKeyAuth: []
      summary: delete book bu id
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get details of all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create books
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
      security:
      - ApiKeyAuth: []
      summary: create books
      tags:
      - books
    put:
      consumes:
      - application/json
      description: edite book bu id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Book'
            type: array
      security:
      - ApiKeyAuth: []
      summary: edite book bu id
      tags:
      - books
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
